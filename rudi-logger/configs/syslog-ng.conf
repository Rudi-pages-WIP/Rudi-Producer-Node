@version: 3.13
@include "scl.conf"

# Syslog-ng configuration file, compatible with default Debian syslogd
# installation.

# First, set some global options.
options { chain_hostnames(on); flush_lines(0); use_dns(no); use_fqdn(no);
	  owner("root"); group("adm"); perm(0640); stats_freq(0); frac-digits(6);
	  bad_hostname("^gconfd$");
};

########################
# Sources
########################
# This is the default behavior of sysklogd package
# Logs may come from unix stream, but not from another machine.
#
source s_src {
       internal();
};

# If you wish to get logs from remote machine you should uncomment
# this and comment the above source line.
#
#source s_net { tcp(ip(127.0.0.1) port(1000)); };
source s_syslog {
       network(ip(127.0.0.1) port(514) transport("tcp") flags(syslog-protocol));
};

source s_tcpdevlog {
       unix-stream("/dev/log" max-connections(10) flags(syslog-protocol));
};

source s_udpdevlog {
    unix-dgram("/var/run/ng" flags(syslog-protocol));
};

########################
# Destinations
########################
# Send the messages to an other host
#
template origin "severity=\"${LEVEL}\" ip=\"${.SDATA.origin.ip}\"";
template auth "reqIP=\"${.SDATA.auth@rudiprod.reqIP}\" userId=\"${.SDATA.auth@rudiprod.userId}\" clientApp=\"${.SDATA.auth@rudiprod.clientApp}\"";
template ope  "opType=\"${.SDATA.operation@rudiprod.opType}\" statusCode=\"${.SDATA.operation@rudiprod.statusCode}\" id=\"${.SDATA.operation@rudiprod.id}\"";
template-function fb "<${PRI}>1 ${ISODATE} ${HOST} ${PROGRAM:--} ${PID:-0} ${MSGID:--} ${SDATA:--} ${MESSAGE:--} @FB_JSON@ $(template origin) $(template auth) $(template ope)";

rewrite r_sd {
    set("55555" value(".SDATA.meta.sequenceId"));
};

destination d_fluentbit {
  network("localhost" transport("udp") port(@TD_AGENT_PORT@) template("$(fb)"));
};

# The root's console.
#
#destination d_console { usertty("root"); };
destination d_console { file("/var/log/rudisyslog" template("$(fb)\n")); };

# The mongodb DB.
#
#destination d_mongodb {
#    mongodb(
#        uri("mongodb://localhost:27017/syslog")
#        collection("syslog_messages")
#        value-pairs(
#            scope("selected-macros" "nv-pairs" "sdata") 
#        )
#    );
#};
########################
# Filters
########################
# Here's come the filter options. With this rules, we can set which 
# message go where.

filter f_l4 { facility(local4); };

########################
# Log paths
########################
log { source(s_syslog);    destination(d_console); destination(d_fluentbit); }; # destination(d_mongodb);
log { source(s_udpdevlog); destination(d_console); destination(d_fluentbit); };
log { source(s_tcpdevlog); destination(d_console); destination(d_fluentbit); };
log { source(s_src);       destination(d_console); };

# All messages send to a remote site
#
#log { source(s_src); destination(d_net); };

###
# Include all config files in /etc/syslog-ng/conf.d/
###
@include "/etc/syslog-ng/conf.d/*.conf"
